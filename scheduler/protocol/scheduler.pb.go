// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scheduler.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Site int32

const (
	Site_niconico Site = 0
	Site_bilibili Site = 1
	Site_youtube  Site = 2
)

var Site_name = map[int32]string{
	0: "niconico",
	1: "bilibili",
	2: "youtube",
}

var Site_value = map[string]int32{
	"niconico": 0,
	"bilibili": 1,
	"youtube":  2,
}

func (x Site) String() string {
	return proto.EnumName(Site_name, int32(x))
}

func (Site) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2b3fc28395a6d9c5, []int{0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3fc28395a6d9c5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ChannelRequest struct {
	Website              Site     `protobuf:"varint,1,opt,name=website,proto3,enum=proto.Site" json:"website,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ChannelID            string   `protobuf:"bytes,3,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelRequest) Reset()         { *m = ChannelRequest{} }
func (m *ChannelRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelRequest) ProtoMessage()    {}
func (*ChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3fc28395a6d9c5, []int{1}
}

func (m *ChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelRequest.Unmarshal(m, b)
}
func (m *ChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelRequest.Marshal(b, m, deterministic)
}
func (m *ChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelRequest.Merge(m, src)
}
func (m *ChannelRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelRequest.Size(m)
}
func (m *ChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelRequest proto.InternalMessageInfo

func (m *ChannelRequest) GetWebsite() Site {
	if m != nil {
		return m.Website
	}
	return Site_niconico
}

func (m *ChannelRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ChannelRequest) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type PlaylistRequest struct {
	Website              Site     `protobuf:"varint,1,opt,name=website,proto3,enum=proto.Site" json:"website,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	PlaylistID           string   `protobuf:"bytes,3,opt,name=playlistID,proto3" json:"playlistID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistRequest) Reset()         { *m = PlaylistRequest{} }
func (m *PlaylistRequest) String() string { return proto.CompactTextString(m) }
func (*PlaylistRequest) ProtoMessage()    {}
func (*PlaylistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3fc28395a6d9c5, []int{2}
}

func (m *PlaylistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistRequest.Unmarshal(m, b)
}
func (m *PlaylistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistRequest.Marshal(b, m, deterministic)
}
func (m *PlaylistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistRequest.Merge(m, src)
}
func (m *PlaylistRequest) XXX_Size() int {
	return xxx_messageInfo_PlaylistRequest.Size(m)
}
func (m *PlaylistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistRequest proto.InternalMessageInfo

func (m *PlaylistRequest) GetWebsite() Site {
	if m != nil {
		return m.Website
	}
	return Site_niconico
}

func (m *PlaylistRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PlaylistRequest) GetPlaylistID() string {
	if m != nil {
		return m.PlaylistID
	}
	return ""
}

type TagRequest struct {
	Website              Site     `protobuf:"varint,1,opt,name=website,proto3,enum=proto.Site" json:"website,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	TagValue             string   `protobuf:"bytes,3,opt,name=tagValue,proto3" json:"tagValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagRequest) Reset()         { *m = TagRequest{} }
func (m *TagRequest) String() string { return proto.CompactTextString(m) }
func (*TagRequest) ProtoMessage()    {}
func (*TagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3fc28395a6d9c5, []int{3}
}

func (m *TagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagRequest.Unmarshal(m, b)
}
func (m *TagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagRequest.Marshal(b, m, deterministic)
}
func (m *TagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagRequest.Merge(m, src)
}
func (m *TagRequest) XXX_Size() int {
	return xxx_messageInfo_TagRequest.Size(m)
}
func (m *TagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TagRequest proto.InternalMessageInfo

func (m *TagRequest) GetWebsite() Site {
	if m != nil {
		return m.Website
	}
	return Site_niconico
}

func (m *TagRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TagRequest) GetTagValue() string {
	if m != nil {
		return m.TagValue
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.Site", Site_name, Site_value)
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*ChannelRequest)(nil), "proto.ChannelRequest")
	proto.RegisterType((*PlaylistRequest)(nil), "proto.PlaylistRequest")
	proto.RegisterType((*TagRequest)(nil), "proto.TagRequest")
}

func init() { proto.RegisterFile("scheduler.proto", fileDescriptor_2b3fc28395a6d9c5) }

var fileDescriptor_2b3fc28395a6d9c5 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x51, 0xc1, 0x6a, 0x83, 0x40,
	0x14, 0x8c, 0x69, 0x8d, 0x71, 0x12, 0x12, 0xbb, 0xd0, 0x20, 0xa1, 0x94, 0x20, 0x14, 0x42, 0x0e,
	0x29, 0xd8, 0xfe, 0x41, 0xd3, 0x43, 0x6e, 0xc5, 0x86, 0xde, 0x57, 0x5d, 0x8c, 0xb0, 0x51, 0xeb,
	0xee, 0x52, 0xfc, 0x9c, 0xfe, 0x69, 0x51, 0xd7, 0xa4, 0x4d, 0xaf, 0x39, 0x3c, 0x64, 0x66, 0x7c,
	0x6f, 0x96, 0x19, 0x4c, 0x45, 0xb4, 0x67, 0xb1, 0xe2, 0xac, 0x5c, 0x17, 0x65, 0x2e, 0x73, 0x62,
	0x36, 0x1f, 0xcf, 0x82, 0xf9, 0x7a, 0x28, 0x64, 0xe5, 0x1d, 0x30, 0x79, 0xd9, 0xd3, 0x2c, 0x63,
	0x3c, 0x60, 0x9f, 0x8a, 0x09, 0x49, 0x1e, 0x60, 0x7d, 0xb1, 0x50, 0xa4, 0x92, 0xb9, 0xc6, 0xc2,
	0x58, 0x4e, 0xfc, 0x51, 0xbb, 0xba, 0xae, 0xa9, 0xa0, 0xd3, 0xc8, 0x0c, 0x03, 0x25, 0x58, 0xb9,
	0xdd, 0xb8, 0xfd, 0x85, 0xb1, 0xb4, 0x03, 0x8d, 0xc8, 0x1d, 0xec, 0xa8, 0x3d, 0xb8, 0xdd, 0xb8,
	0x57, 0x8d, 0x74, 0x22, 0xbc, 0x02, 0xd3, 0x37, 0x4e, 0x2b, 0x9e, 0x0a, 0x79, 0x21, 0xbf, 0x7b,
	0xa0, 0xd0, 0x17, 0x8f, 0x86, 0xbf, 0x18, 0x2f, 0x01, 0x76, 0x34, 0xb9, 0x90, 0xd9, 0x1c, 0x43,
	0x49, 0x93, 0x0f, 0xca, 0x15, 0xd3, 0x56, 0x47, 0xbc, 0x7a, 0xc4, 0x75, 0xb3, 0x3b, 0xc6, 0x30,
	0x4b, 0xa3, 0xbc, 0x1e, 0xa7, 0x57, 0xa3, 0x30, 0xe5, 0x69, 0x3d, 0x8e, 0x41, 0x46, 0xb0, 0xaa,
	0x5c, 0x49, 0x15, 0x32, 0xa7, 0xef, 0x7f, 0x1b, 0xb0, 0xdf, 0xbb, 0x7a, 0x88, 0x0f, 0x3b, 0xe6,
	0xba, 0x0a, 0x72, 0xab, 0x5f, 0xf5, 0xb7, 0x9a, 0xf9, 0x58, 0xd3, 0x6d, 0x75, 0x3d, 0xf2, 0x0c,
	0xc4, 0xbc, 0xcb, 0x93, 0xcc, 0xb4, 0x7a, 0x16, 0xf0, 0xbf, 0xad, 0x15, 0xcc, 0x98, 0xef, 0x68,
	0x42, 0x6e, 0xb4, 0x70, 0xca, 0xe7, 0xfc, 0xdf, 0x70, 0xd0, 0xc0, 0xa7, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x10, 0xd9, 0x95, 0x52, 0x48, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchedulerClient is the client API for Scheduler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerClient interface {
	DlChannel(ctx context.Context, in *ChannelRequest, opts ...grpc.CallOption) (*Empty, error)
	DlPlaylist(ctx context.Context, in *PlaylistRequest, opts ...grpc.CallOption) (*Empty, error)
	DlTag(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*Empty, error)
}

type schedulerClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulerClient(cc grpc.ClientConnInterface) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) DlChannel(ctx context.Context, in *ChannelRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Scheduler/dlChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) DlPlaylist(ctx context.Context, in *PlaylistRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Scheduler/dlPlaylist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) DlTag(ctx context.Context, in *TagRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Scheduler/dlTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulerServer is the server API for Scheduler service.
type SchedulerServer interface {
	DlChannel(context.Context, *ChannelRequest) (*Empty, error)
	DlPlaylist(context.Context, *PlaylistRequest) (*Empty, error)
	DlTag(context.Context, *TagRequest) (*Empty, error)
}

// UnimplementedSchedulerServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulerServer struct {
}

func (*UnimplementedSchedulerServer) DlChannel(ctx context.Context, req *ChannelRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DlChannel not implemented")
}
func (*UnimplementedSchedulerServer) DlPlaylist(ctx context.Context, req *PlaylistRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DlPlaylist not implemented")
}
func (*UnimplementedSchedulerServer) DlTag(ctx context.Context, req *TagRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DlTag not implemented")
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_DlChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).DlChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Scheduler/DlChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).DlChannel(ctx, req.(*ChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_DlPlaylist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaylistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).DlPlaylist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Scheduler/DlPlaylist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).DlPlaylist(ctx, req.(*PlaylistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_DlTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).DlTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Scheduler/DlTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).DlTag(ctx, req.(*TagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "dlChannel",
			Handler:    _Scheduler_DlChannel_Handler,
		},
		{
			MethodName: "dlPlaylist",
			Handler:    _Scheduler_DlPlaylist_Handler,
		},
		{
			MethodName: "dlTag",
			Handler:    _Scheduler_DlTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scheduler.proto",
}
