// Code generated by protoc-gen-go. DO NOT EDIT.
// source: videoservice.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Website int32

const (
	Website_niconico Website = 0
	Website_bilibili Website = 1
	Website_youtube  Website = 2
)

var Website_name = map[int32]string{
	0: "niconico",
	1: "bilibili",
	2: "youtube",
}

var Website_value = map[string]int32{
	"niconico": 0,
	"bilibili": 1,
	"youtube":  2,
}

func (x Website) String() string {
	return proto.EnumName(Website_name, int32(x))
}

func (Website) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{0}
}

type VideoRequest struct {
	VideoID              string   `protobuf:"bytes,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoRequest) Reset()         { *m = VideoRequest{} }
func (m *VideoRequest) String() string { return proto.CompactTextString(m) }
func (*VideoRequest) ProtoMessage()    {}
func (*VideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{0}
}

func (m *VideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoRequest.Unmarshal(m, b)
}
func (m *VideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoRequest.Marshal(b, m, deterministic)
}
func (m *VideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoRequest.Merge(m, src)
}
func (m *VideoRequest) XXX_Size() int {
	return xxx_messageInfo_VideoRequest.Size(m)
}
func (m *VideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VideoRequest proto.InternalMessageInfo

func (m *VideoRequest) GetVideoID() string {
	if m != nil {
		return m.VideoID
	}
	return ""
}

type InputVideoChunk struct {
	// Types that are valid to be assigned to Payload:
	//	*InputVideoChunk_Content
	//	*InputVideoChunk_Meta
	Payload              isInputVideoChunk_Payload `protobuf_oneof:"Payload"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *InputVideoChunk) Reset()         { *m = InputVideoChunk{} }
func (m *InputVideoChunk) String() string { return proto.CompactTextString(m) }
func (*InputVideoChunk) ProtoMessage()    {}
func (*InputVideoChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{1}
}

func (m *InputVideoChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputVideoChunk.Unmarshal(m, b)
}
func (m *InputVideoChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputVideoChunk.Marshal(b, m, deterministic)
}
func (m *InputVideoChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputVideoChunk.Merge(m, src)
}
func (m *InputVideoChunk) XXX_Size() int {
	return xxx_messageInfo_InputVideoChunk.Size(m)
}
func (m *InputVideoChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_InputVideoChunk.DiscardUnknown(m)
}

var xxx_messageInfo_InputVideoChunk proto.InternalMessageInfo

type isInputVideoChunk_Payload interface {
	isInputVideoChunk_Payload()
}

type InputVideoChunk_Content struct {
	Content *FileContent `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type InputVideoChunk_Meta struct {
	Meta *InputFileMetadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

func (*InputVideoChunk_Content) isInputVideoChunk_Payload() {}

func (*InputVideoChunk_Meta) isInputVideoChunk_Payload() {}

func (m *InputVideoChunk) GetPayload() isInputVideoChunk_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *InputVideoChunk) GetContent() *FileContent {
	if x, ok := m.GetPayload().(*InputVideoChunk_Content); ok {
		return x.Content
	}
	return nil
}

func (m *InputVideoChunk) GetMeta() *InputFileMetadata {
	if x, ok := m.GetPayload().(*InputVideoChunk_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InputVideoChunk) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InputVideoChunk_Content)(nil),
		(*InputVideoChunk_Meta)(nil),
	}
}

type ResponseVideoChunk struct {
	// Types that are valid to be assigned to Payload:
	//	*ResponseVideoChunk_Content
	//	*ResponseVideoChunk_Meta
	Payload              isResponseVideoChunk_Payload `protobuf_oneof:"Payload"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ResponseVideoChunk) Reset()         { *m = ResponseVideoChunk{} }
func (m *ResponseVideoChunk) String() string { return proto.CompactTextString(m) }
func (*ResponseVideoChunk) ProtoMessage()    {}
func (*ResponseVideoChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{2}
}

func (m *ResponseVideoChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseVideoChunk.Unmarshal(m, b)
}
func (m *ResponseVideoChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseVideoChunk.Marshal(b, m, deterministic)
}
func (m *ResponseVideoChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseVideoChunk.Merge(m, src)
}
func (m *ResponseVideoChunk) XXX_Size() int {
	return xxx_messageInfo_ResponseVideoChunk.Size(m)
}
func (m *ResponseVideoChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseVideoChunk.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseVideoChunk proto.InternalMessageInfo

type isResponseVideoChunk_Payload interface {
	isResponseVideoChunk_Payload()
}

type ResponseVideoChunk_Content struct {
	Content *FileContent `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type ResponseVideoChunk_Meta struct {
	Meta *ResponseFileMetadata `protobuf:"bytes,2,opt,name=meta,proto3,oneof"`
}

func (*ResponseVideoChunk_Content) isResponseVideoChunk_Payload() {}

func (*ResponseVideoChunk_Meta) isResponseVideoChunk_Payload() {}

func (m *ResponseVideoChunk) GetPayload() isResponseVideoChunk_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ResponseVideoChunk) GetContent() *FileContent {
	if x, ok := m.GetPayload().(*ResponseVideoChunk_Content); ok {
		return x.Content
	}
	return nil
}

func (m *ResponseVideoChunk) GetMeta() *ResponseFileMetadata {
	if x, ok := m.GetPayload().(*ResponseVideoChunk_Meta); ok {
		return x.Meta
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResponseVideoChunk) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResponseVideoChunk_Content)(nil),
		(*ResponseVideoChunk_Meta)(nil),
	}
}

type FileContent struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileContent) Reset()         { *m = FileContent{} }
func (m *FileContent) String() string { return proto.CompactTextString(m) }
func (*FileContent) ProtoMessage()    {}
func (*FileContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{3}
}

func (m *FileContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileContent.Unmarshal(m, b)
}
func (m *FileContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileContent.Marshal(b, m, deterministic)
}
func (m *FileContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileContent.Merge(m, src)
}
func (m *FileContent) XXX_Size() int {
	return xxx_messageInfo_FileContent.Size(m)
}
func (m *FileContent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileContent.DiscardUnknown(m)
}

var xxx_messageInfo_FileContent proto.InternalMessageInfo

func (m *FileContent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Could make the reupload fields optional
type InputFileMetadata struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AuthorUID            string   `protobuf:"bytes,3,opt,name=authorUID,proto3" json:"authorUID,omitempty"`
	OriginalVideoLink    string   `protobuf:"bytes,4,opt,name=originalVideoLink,proto3" json:"originalVideoLink,omitempty"`
	AuthorUsername       string   `protobuf:"bytes,5,opt,name=authorUsername,proto3" json:"authorUsername,omitempty"`
	OriginalSite         Website  `protobuf:"varint,6,opt,name=originalSite,proto3,enum=proto.Website" json:"originalSite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InputFileMetadata) Reset()         { *m = InputFileMetadata{} }
func (m *InputFileMetadata) String() string { return proto.CompactTextString(m) }
func (*InputFileMetadata) ProtoMessage()    {}
func (*InputFileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{4}
}

func (m *InputFileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InputFileMetadata.Unmarshal(m, b)
}
func (m *InputFileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InputFileMetadata.Marshal(b, m, deterministic)
}
func (m *InputFileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InputFileMetadata.Merge(m, src)
}
func (m *InputFileMetadata) XXX_Size() int {
	return xxx_messageInfo_InputFileMetadata.Size(m)
}
func (m *InputFileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_InputFileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_InputFileMetadata proto.InternalMessageInfo

func (m *InputFileMetadata) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *InputFileMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InputFileMetadata) GetAuthorUID() string {
	if m != nil {
		return m.AuthorUID
	}
	return ""
}

func (m *InputFileMetadata) GetOriginalVideoLink() string {
	if m != nil {
		return m.OriginalVideoLink
	}
	return ""
}

func (m *InputFileMetadata) GetAuthorUsername() string {
	if m != nil {
		return m.AuthorUsername
	}
	return ""
}

func (m *InputFileMetadata) GetOriginalSite() Website {
	if m != nil {
		return m.OriginalSite
	}
	return Website_niconico
}

// For now, these two are the same, but may deviate in future
type ResponseFileMetadata struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	AuthorUID            int64    `protobuf:"varint,3,opt,name=authorUID,proto3" json:"authorUID,omitempty"`
	OriginalVideoLink    string   `protobuf:"bytes,4,opt,name=originalVideoLink,proto3" json:"originalVideoLink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseFileMetadata) Reset()         { *m = ResponseFileMetadata{} }
func (m *ResponseFileMetadata) String() string { return proto.CompactTextString(m) }
func (*ResponseFileMetadata) ProtoMessage()    {}
func (*ResponseFileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{5}
}

func (m *ResponseFileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseFileMetadata.Unmarshal(m, b)
}
func (m *ResponseFileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseFileMetadata.Marshal(b, m, deterministic)
}
func (m *ResponseFileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseFileMetadata.Merge(m, src)
}
func (m *ResponseFileMetadata) XXX_Size() int {
	return xxx_messageInfo_ResponseFileMetadata.Size(m)
}
func (m *ResponseFileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseFileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseFileMetadata proto.InternalMessageInfo

func (m *ResponseFileMetadata) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ResponseFileMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResponseFileMetadata) GetAuthorUID() int64 {
	if m != nil {
		return m.AuthorUID
	}
	return 0
}

func (m *ResponseFileMetadata) GetOriginalVideoLink() string {
	if m != nil {
		return m.OriginalVideoLink
	}
	return ""
}

type UploadResponse struct {
	VideoID              int64    `protobuf:"varint,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_673ac1e0917b87c1, []int{6}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetVideoID() int64 {
	if m != nil {
		return m.VideoID
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.Website", Website_name, Website_value)
	proto.RegisterType((*VideoRequest)(nil), "proto.VideoRequest")
	proto.RegisterType((*InputVideoChunk)(nil), "proto.InputVideoChunk")
	proto.RegisterType((*ResponseVideoChunk)(nil), "proto.ResponseVideoChunk")
	proto.RegisterType((*FileContent)(nil), "proto.FileContent")
	proto.RegisterType((*InputFileMetadata)(nil), "proto.InputFileMetadata")
	proto.RegisterType((*ResponseFileMetadata)(nil), "proto.ResponseFileMetadata")
	proto.RegisterType((*UploadResponse)(nil), "proto.uploadResponse")
}

func init() { proto.RegisterFile("videoservice.proto", fileDescriptor_673ac1e0917b87c1) }

var fileDescriptor_673ac1e0917b87c1 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xbd, 0x4d, 0x52, 0x93, 0x71, 0x08, 0xe9, 0x50, 0x90, 0x29, 0x1c, 0x82, 0x0f, 0x28,
	0xaa, 0x50, 0x04, 0xe6, 0x05, 0x10, 0x89, 0x50, 0x23, 0x81, 0x84, 0x5c, 0xc1, 0x7d, 0x13, 0x8f,
	0xe8, 0xaa, 0xee, 0xae, 0xb1, 0xd7, 0xad, 0x2a, 0x71, 0xe2, 0x1d, 0xb8, 0xf0, 0x9a, 0xbc, 0x00,
	0xf2, 0x78, 0x4d, 0xfe, 0x14, 0x09, 0x09, 0x7a, 0x58, 0x25, 0x3b, 0xf3, 0xdb, 0x6f, 0xbf, 0x19,
	0xcf, 0x02, 0x5e, 0xaa, 0x94, 0x4c, 0x49, 0xc5, 0xa5, 0x5a, 0xd1, 0x34, 0x2f, 0x8c, 0x35, 0xd8,
	0xe3, 0x9f, 0x68, 0x02, 0x83, 0x4f, 0x75, 0x32, 0xa1, 0x2f, 0x15, 0x95, 0x16, 0x43, 0xf0, 0x19,
	0x5e, 0xcc, 0x43, 0x31, 0x16, 0x93, 0x7e, 0xd2, 0x6e, 0xa3, 0xaf, 0x70, 0x6f, 0xa1, 0xf3, 0xca,
	0x32, 0x3e, 0x3b, 0xab, 0xf4, 0x39, 0x4e, 0xc1, 0x5f, 0x19, 0x6d, 0x49, 0x5b, 0x86, 0x83, 0x18,
	0x1b, 0xf1, 0xe9, 0x5b, 0x95, 0xd1, 0xac, 0xc9, 0x9c, 0x78, 0x49, 0x0b, 0xe1, 0x14, 0xba, 0x17,
	0x64, 0x65, 0xb8, 0xc7, 0x70, 0xe8, 0x60, 0x56, 0xad, 0x4f, 0xbc, 0x27, 0x2b, 0x53, 0x69, 0xe5,
	0x89, 0x97, 0x30, 0xf7, 0xa6, 0x0f, 0xfe, 0x07, 0x79, 0x9d, 0x19, 0x99, 0x46, 0xdf, 0x04, 0x60,
	0x42, 0x65, 0x6e, 0x74, 0x49, 0xff, 0xe1, 0xe0, 0xe5, 0x96, 0x83, 0xc7, 0x0e, 0x6e, 0x85, 0xff,
	0x66, 0xe2, 0x29, 0x04, 0x1b, 0xba, 0x88, 0xd0, 0x9d, 0x4b, 0x2b, 0xf9, 0xe6, 0x41, 0xc2, 0xff,
	0xa3, 0x9f, 0x02, 0x0e, 0x6e, 0x14, 0x84, 0x87, 0xd0, 0xb3, 0xca, 0x66, 0xe4, 0x7a, 0xda, 0x6c,
	0x70, 0x0c, 0x41, 0x4a, 0xe5, 0xaa, 0x50, 0xb9, 0x55, 0x46, 0xb3, 0xa7, 0x7e, 0xb2, 0x19, 0xc2,
	0x27, 0xd0, 0x97, 0x95, 0x3d, 0x33, 0xc5, 0xc7, 0xc5, 0x3c, 0xec, 0x70, 0x7e, 0x1d, 0xc0, 0xe7,
	0x70, 0x60, 0x0a, 0xf5, 0x59, 0x69, 0x99, 0x71, 0x4b, 0xde, 0x29, 0x7d, 0x1e, 0x76, 0x99, 0xba,
	0x99, 0xc0, 0x67, 0x30, 0x74, 0x47, 0x4b, 0x2a, 0xb4, 0xbc, 0xa0, 0xb0, 0xc7, 0xe8, 0x4e, 0x14,
	0x63, 0x18, 0xb4, 0x87, 0x4f, 0x95, 0xa5, 0x70, 0x7f, 0x2c, 0x26, 0xc3, 0x78, 0xe8, 0x5a, 0x75,
	0x45, 0xcb, 0x52, 0x59, 0x4a, 0xb6, 0x98, 0xe8, 0x87, 0x80, 0xc3, 0x3f, 0x35, 0xf1, 0xf6, 0x0a,
	0xef, 0xfc, 0x73, 0xe1, 0xd1, 0x31, 0x0c, 0xab, 0xbc, 0xfe, 0x7e, 0xad, 0xc3, 0xdd, 0x21, 0xef,
	0xfc, 0x1e, 0xf2, 0xe3, 0x18, 0x7c, 0x57, 0x21, 0x0e, 0xe0, 0x8e, 0x56, 0x2b, 0x53, 0xaf, 0x91,
	0x57, 0xef, 0x96, 0x2a, 0x53, 0xf5, 0x1a, 0x09, 0x0c, 0xc0, 0xbf, 0x36, 0x95, 0xad, 0x96, 0x34,
	0xda, 0x8b, 0xbf, 0x0b, 0xf7, 0x86, 0x4e, 0x9b, 0x07, 0x86, 0xaf, 0x21, 0x68, 0x2e, 0xe4, 0x28,
	0x3e, 0xdc, 0x9c, 0xf3, 0xf5, 0xec, 0x1e, 0x3d, 0x70, 0xf1, 0x6d, 0x73, 0x91, 0x37, 0x11, 0x38,
	0x83, 0xbb, 0xa9, 0xb9, 0xd2, 0x6b, 0x8d, 0xfb, 0x8e, 0xdd, 0x7c, 0xab, 0x47, 0x8f, 0x76, 0xc6,
	0x77, 0xad, 0x1d, 0x79, 0x2f, 0xc4, 0x72, 0x9f, 0xb3, 0xaf, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xe0, 0x12, 0x3e, 0x31, 0xfe, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VideoServiceClient is the client API for VideoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoServiceClient interface {
	UploadVideo(ctx context.Context, opts ...grpc.CallOption) (VideoService_UploadVideoClient, error)
	DownloadVideo(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (VideoService_DownloadVideoClient, error)
}

type videoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoServiceClient(cc grpc.ClientConnInterface) VideoServiceClient {
	return &videoServiceClient{cc}
}

func (c *videoServiceClient) UploadVideo(ctx context.Context, opts ...grpc.CallOption) (VideoService_UploadVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[0], "/proto.VideoService/uploadVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceUploadVideoClient{stream}
	return x, nil
}

type VideoService_UploadVideoClient interface {
	Send(*InputVideoChunk) error
	CloseAndRecv() (*UploadResponse, error)
	grpc.ClientStream
}

type videoServiceUploadVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceUploadVideoClient) Send(m *InputVideoChunk) error {
	return x.ClientStream.SendMsg(m)
}

func (x *videoServiceUploadVideoClient) CloseAndRecv() (*UploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *videoServiceClient) DownloadVideo(ctx context.Context, in *VideoRequest, opts ...grpc.CallOption) (VideoService_DownloadVideoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VideoService_serviceDesc.Streams[1], "/proto.VideoService/downloadVideo", opts...)
	if err != nil {
		return nil, err
	}
	x := &videoServiceDownloadVideoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VideoService_DownloadVideoClient interface {
	Recv() (*ResponseVideoChunk, error)
	grpc.ClientStream
}

type videoServiceDownloadVideoClient struct {
	grpc.ClientStream
}

func (x *videoServiceDownloadVideoClient) Recv() (*ResponseVideoChunk, error) {
	m := new(ResponseVideoChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VideoServiceServer is the server API for VideoService service.
type VideoServiceServer interface {
	UploadVideo(VideoService_UploadVideoServer) error
	DownloadVideo(*VideoRequest, VideoService_DownloadVideoServer) error
}

// UnimplementedVideoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServiceServer struct {
}

func (*UnimplementedVideoServiceServer) UploadVideo(srv VideoService_UploadVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadVideo not implemented")
}
func (*UnimplementedVideoServiceServer) DownloadVideo(req *VideoRequest, srv VideoService_DownloadVideoServer) error {
	return status.Errorf(codes.Unimplemented, "method DownloadVideo not implemented")
}

func RegisterVideoServiceServer(s *grpc.Server, srv VideoServiceServer) {
	s.RegisterService(&_VideoService_serviceDesc, srv)
}

func _VideoService_UploadVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VideoServiceServer).UploadVideo(&videoServiceUploadVideoServer{stream})
}

type VideoService_UploadVideoServer interface {
	SendAndClose(*UploadResponse) error
	Recv() (*InputVideoChunk, error)
	grpc.ServerStream
}

type videoServiceUploadVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceUploadVideoServer) SendAndClose(m *UploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *videoServiceUploadVideoServer) Recv() (*InputVideoChunk, error) {
	m := new(InputVideoChunk)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _VideoService_DownloadVideo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VideoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VideoServiceServer).DownloadVideo(m, &videoServiceDownloadVideoServer{stream})
}

type VideoService_DownloadVideoServer interface {
	Send(*ResponseVideoChunk) error
	grpc.ServerStream
}

type videoServiceDownloadVideoServer struct {
	grpc.ServerStream
}

func (x *videoServiceDownloadVideoServer) Send(m *ResponseVideoChunk) error {
	return x.ServerStream.SendMsg(m)
}

var _VideoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.VideoService",
	HandlerType: (*VideoServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "uploadVideo",
			Handler:       _VideoService_UploadVideo_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "downloadVideo",
			Handler:       _VideoService_DownloadVideo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "videoservice.proto",
}
